name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    name: Setup and Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/pnpm-lock.yaml') }}

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1
          
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/pnpm-lock.yaml') }}
          
      - name: Build project
        run: pnpm build
        
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            .next/static
            .next/standalone
            dist
          key: ${{ runner.os }}-build-${{ github.sha }}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1
          
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/pnpm-lock.yaml') }}
          
      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            .next/static
            .next/standalone
            dist
          key: ${{ runner.os }}-build-${{ github.sha }}
          
      - name: Run tests
        run: pnpm test --coverage
        
      - name: Upload coverage reports
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    name: Run Linting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1
          
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/pnpm-lock.yaml') }}
          
      - name: Run lint
        run: pnpm lint

  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1
          
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/pnpm-lock.yaml') }}
          
      - name: Check formatting
        run: pnpm format:check

  # Summary job that depends on all others
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [setup, build, test, lint, format]
    if: always()
    
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.setup.result }}" == "success" && \
                "${{ needs.build.result }}" == "success" && \
                "${{ needs.test.result }}" == "success" && \
                "${{ needs.lint.result }}" == "success" && \
                "${{ needs.format.result }}" == "success" ]]; then
            echo "✅ All CI jobs passed!"
            exit 0
          else
            echo "❌ Some CI jobs failed:"
            echo "  Setup: ${{ needs.setup.result }}"
            echo "  Build: ${{ needs.build.result }}"
            echo "  Test: ${{ needs.test.result }}"
            echo "  Lint: ${{ needs.lint.result }}"
            echo "  Format: ${{ needs.format.result }}"
            exit 1
          fi