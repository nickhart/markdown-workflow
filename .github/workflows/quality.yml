name: Quality Gate

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run tests with coverage
        run: pnpm test --coverage --watchAll=false
        
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  complexity:
    name: Code Complexity Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Install complexity tools
        run: npm install -g complexity-report
        
      - name: Analyze complexity
        run: |
          complexity-report src/**/*.ts --format json > complexity-report.json
          echo "📊 Complexity analysis complete"
          
      - name: Upload complexity report
        uses: actions/upload-artifact@v4
        with:
          name: complexity-report
          path: complexity-report.json
          retention-days: 30

  performance:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build project
        run: pnpm build
        
      - name: Bundle size analysis
        run: |
          echo "📦 Analyzing bundle size..."
          if [ -d ".next" ]; then
            du -sh .next/static/* | sort -hr > bundle-size-report.txt
          fi
          if [ -d "dist" ]; then
            du -sh dist/* | sort -hr >> bundle-size-report.txt
          fi
          echo "Bundle size analysis complete"
          
      - name: Upload bundle size report
        uses: actions/upload-artifact@v4
        with:
          name: bundle-size-report
          path: bundle-size-report.txt
          retention-days: 30

  type-coverage:
    name: TypeScript Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Install type coverage tools
        run: npm install -g type-coverage
        
      - name: Check TypeScript coverage
        run: |
          type-coverage --detail > type-coverage-report.txt
          echo "✅ TypeScript coverage analysis complete"
          
      - name: Upload type coverage report
        uses: actions/upload-artifact@v4
        with:
          name: type-coverage-report
          path: type-coverage-report.txt
          retention-days: 30

  quality-gate:
    name: Quality Gate Summary
    runs-on: ubuntu-latest
    needs: [sonarcloud, complexity, performance, type-coverage]
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Quality Gate Report
        run: |
          echo "## 🏆 Quality Gate Summary" > quality-summary.md
          echo "" >> quality-summary.md
          echo "### Job Results:" >> quality-summary.md
          echo "- SonarCloud: ${{ needs.sonarcloud.result }}" >> quality-summary.md
          echo "- Complexity: ${{ needs.complexity.result }}" >> quality-summary.md
          echo "- Performance: ${{ needs.performance.result }}" >> quality-summary.md
          echo "- Type Coverage: ${{ needs.type-coverage.result }}" >> quality-summary.md
          echo "" >> quality-summary.md
          echo "### Reports Generated:" >> quality-summary.md
          echo "- 📊 Code complexity analysis" >> quality-summary.md
          echo "- 📦 Bundle size report" >> quality-summary.md
          echo "- 🔍 TypeScript coverage" >> quality-summary.md
          echo "- 🛡️ Security scan results" >> quality-summary.md
          
          cat quality-summary.md
          
      - name: Upload quality summary
        uses: actions/upload-artifact@v4
        with:
          name: quality-gate-summary
          path: quality-summary.md
          retention-days: 30